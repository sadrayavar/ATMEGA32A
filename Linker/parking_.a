;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h> // delay_ms functions
;#include <stdio.h> // sprintf function
;#include <alcd.h>  // lcd related functions
;#define xtal 8000000
;
;// prototyping functions
;char menu(void);
;char in_out_search(void);
;char set_time(void);
;char reserve_park(void);
;char set_date(void);
;
;// parking related variables
;unsigned int n_vurud, n_khuruj;
;eeprom unsigned int enter_array[31] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  ...
;eeprom unsigned int exit_array[31] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ...
;eeprom unsigned char day_index = 0;
;unsigned char const init_capacity = 10;

	.DSEG
;signed char capacity = init_capacity, reserved = 0;
;bit is_full = 0, is_empty = 1;
;
;// date related variables
;signed char minute = 59, hour = 23, second = 10, day = 12, month = 12;
;signed int year = 1402;
;
;// define timer interrupt: clock and date logic
;interrupt[TIM2_OVF] void timer2_ovf_isr(void)
; 0000 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E 
; 0000 001F   // logic of second, minute, hour
; 0000 0020   if (second == 59)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0021   {
; 0000 0022     second = 0;
;PCODE: $00000012 VOL: 0
; 0000 0023     if (minute == 59)
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0024     {
; 0000 0025       minute = 0;
;PCODE: $00000016 VOL: 0
; 0000 0026       if (hour == 23)
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0027       {
; 0000 0028         hour = 0;
;PCODE: $0000001A VOL: 0
; 0000 0029         day++;
;PCODE: $0000001B VOL: 0
; 0000 002A       }
; 0000 002B       else
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002C         hour++;
;PCODE: $0000001E VOL: 0
; 0000 002D     }
;PCODE: $0000001F VOL: 0
; 0000 002E     else
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002F       minute++;
;PCODE: $00000022 VOL: 0
; 0000 0030   }
;PCODE: $00000023 VOL: 0
; 0000 0031   else
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0032     second++;
;PCODE: $00000026 VOL: 0
; 0000 0033 
; 0000 0034   // logic of day, month
; 0000 0035   if (month <= 6)
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0036   {
; 0000 0037     if (day > 31)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0038     {
; 0000 0039       day = 1;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003A       month++;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003B     }
; 0000 003C   }
;PCODE: $00000033 VOL: 0
; 0000 003D   else
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003E   {
; 0000 003F     if (month == 12)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0040     {
; 0000 0041       if (day > 29)
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0042       {
; 0000 0043         day = 1;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0044         month++;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0045       }
; 0000 0046     }
;PCODE: $00000041 VOL: 0
; 0000 0047     else
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0048     {
; 0000 0049       if (day > 30)
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 004A       {
; 0000 004B         day = 1;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004C         month++;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004D       }
; 0000 004E     }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004F   }
;PCODE: $0000004E VOL: 0
; 0000 0050 
; 0000 0051   // logic of year
; 0000 0052   if (month > 12)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0053   {
; 0000 0054     month = 1;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0055     year++;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0056   }
; 0000 0057 }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;
;// define interrupt 0: for exiting cars
;interrupt[EXT_INT0] void ext_int0_isr(void)
; 0000 005B {
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005C   if (is_empty == 1)
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 005D   {
; 0000 005E     lcd_clear();
;PCODE: $00000061 VOL: 0
; 0000 005F     lcd_putsf("Emp");
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0060     delay_ms(500);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0061   }
; 0000 0062   else
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0063   {
; 0000 0064 
; 0000 0065     capacity++;
;PCODE: $00000069 VOL: 0
; 0000 0066     n_khuruj++;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0067 
; 0000 0068     // check if the parking is empty
; 0000 0069     if ((capacity + reserved) >= init_capacity)
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 006A     {
; 0000 006B       capacity = init_capacity - reserved;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 006C       is_empty = 1;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 006D     }
; 0000 006E     else
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 006F     {
; 0000 0070       is_empty = 0;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0071     }
;PCODE: $00000080 VOL: 0
; 0000 0072 
; 0000 0073     // checking if the parking is full
; 0000 0074     if (capacity <= 0)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0075     {
; 0000 0076       capacity = 0;
;PCODE: $00000084 VOL: 0
; 0000 0077       is_full = 1;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0078     }
; 0000 0079     else
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 007A     {
; 0000 007B       is_full = 0;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 007C     }
;PCODE: $0000008D VOL: 0
; 0000 007D   }
;PCODE: $0000008E VOL: 0
; 0000 007E }
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;
;// define interrupt 1: for entering cars
;interrupt[EXT_INT1] void ext_int1_isr(void)
; 0000 0082 {
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0083   if (is_full == 1)
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0084   {
; 0000 0085     lcd_clear();
;PCODE: $00000097 VOL: 0
; 0000 0086     lcd_putsf("Full");
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0087     delay_ms(500);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0088   }
; 0000 0089   else
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 008A   {
; 0000 008B 
; 0000 008C     capacity--;
;PCODE: $0000009F VOL: 0
; 0000 008D     n_vurud++;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 008E 
; 0000 008F     // checking if the parking is full
; 0000 0090     if ((capacity) <= 0)
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0091     {
; 0000 0092       capacity = 0;
;PCODE: $000000A7 VOL: 0
; 0000 0093       is_full = 1;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0094     }
; 0000 0095     else
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0096     {
; 0000 0097       is_full = 0;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0098     }
;PCODE: $000000B0 VOL: 0
; 0000 0099 
; 0000 009A     // check if the parking is empty
; 0000 009B     if ((capacity + reserved) >= init_capacity)
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 009C     {
; 0000 009D       capacity = init_capacity - reserved;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 009E       is_empty = 1;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 009F     }
; 0000 00A0     else
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00A1     {
; 0000 00A2       is_empty = 0;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00A3     }
;PCODE: $000000C3 VOL: 0
; 0000 00A4   }
;PCODE: $000000C4 VOL: 0
; 0000 00A5 }
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;
;void main(void)
; 0000 00A8 {
;PCODE: $000000C8 VOL: 0
; 0000 00A9   char line[17], line2[17];
; 0000 00AA 
; 0000 00AB   GICR |= 0xC0;
;PCODE: $000000C9 VOL: 0
;	line -> Y+17
;	line2 -> Y+0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00AC   MCUCR = 0x0B;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00AD   MCUCSR = 0x00;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00AE   GIFR = 0xC0;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00AF 
; 0000 00B0   // initilize lcd
; 0000 00B1   lcd_init(16);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00B2   lcd_clear();
;PCODE: $000000D5 VOL: 0
; 0000 00B3   lcd_gotoxy(0, 1);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00B4   delay_ms(300);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00B5 
; 0000 00B6   ASSR = 0x08; // timer2
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00B7   TCCR2 = 0x05;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 00B8   TCNT2 = 0x00;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00B9   OCR2 = 0x00;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00BA   TIMSK = 0x40;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00BB 
; 0000 00BC   PORTA = (1 << DDD0) | (1 << DDD1) | (1 << DDD2) | (1 << DDD3) | (1 << DDD4);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00BD 
; 0000 00BE   day = day_index; // day_index in epprom
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00BF 
; 0000 00C0 #asm("sei")
;PCODE: $000000EB VOL: 0
	sei
;PCODE: $000000EC VOL: 0
; 0000 00C1   capacity = capacity - reserved;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00C2 
; 0000 00C3   while (1)
;PCODE: $000000EF VOL: 0
; 0000 00C4   {
; 0000 00C5 
; 0000 00C6     if (PINA .2 == 0)
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00C7     {
; 0000 00C8       while (PINA .2 == 0)
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00C9         ;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00CA       menu();
;PCODE: $000000F9 VOL: 0
; 0000 00CB     }
; 0000 00CC 
; 0000 00CD     // save the enter and exits at the end of the day
; 0000 00CE     if (hour == 0 & minute == 0 & second == 0)
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00CF     { //  data will save   in 0:0:00
; 0000 00D0       enter_array[day_index] = n_vurud;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00D1       exit_array[day_index] = n_khuruj;
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00D2       day_index++;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00D3 
; 0000 00D4       if (day_index > 30) // 30 31 29 yek mah
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00D5         day_index = 0;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00D6 
; 0000 00D7       while (hour == 0 & minute == 0 & second == 0)
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00D8       {
; 0000 00D9         lcd_clear();
;PCODE: $00000134 VOL: 0
; 0000 00DA         lcd_putsf("saving data");
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00DB       }
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00DC     }
; 0000 00DD 
; 0000 00DE     sprintf(line, "Cap=%d %d/%d/%d", capacity, year, month, day);
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00DF     sprintf(line2, "%d:%d:%d  Res=%d ", hour, minute, second, reserved);
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00E0     lcd_clear();
;PCODE: $00000165 VOL: 0
; 0000 00E1     lcd_puts(line);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00E2     lcd_gotoxy(0, 1);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00E3     lcd_puts(line2);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00E4     delay_ms(25);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00E5   }
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00E6 }
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;
;/// Functions 4 menu and...
;char menu(void)
; 0000 00EA {
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00EB   char choice = 0;
; 0000 00EC   while (1)
;PCODE: $00000179 VOL: 0
;	choice -> R17
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00ED   {
; 0000 00EE     // iterate through menu items
; 0000 00EF     if (choice == 0)
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00F0     {
; 0000 00F1       lcd_clear();
;PCODE: $0000017F VOL: 0
; 0000 00F2       lcd_putsf("Time Setting >>");
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00F3     }
; 0000 00F4     if (choice == 1)
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00F5     {
; 0000 00F6       lcd_clear();
;PCODE: $00000187 VOL: 0
; 0000 00F7       lcd_putsf("IN&OUT Search >>");
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00F8     }
; 0000 00F9     if (choice == 2)
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00FA     {
; 0000 00FB       lcd_clear();
;PCODE: $0000018F VOL: 0
; 0000 00FC       lcd_putsf("Reserve_Park >>");
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00FD     }
; 0000 00FE     if (choice == 3)
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00FF     {
; 0000 0100       lcd_clear();
;PCODE: $00000197 VOL: 0
; 0000 0101       lcd_putsf("Set date >>");
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0102     }
; 0000 0103     if (PINA .3 == 0) // next item
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0104     {
; 0000 0105       while (PINA .3 == 0)
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0106         ;
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0107       choice++;
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 0108       if (choice >= 4)
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0109         choice = 0;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 010A     }
;PCODE: $000001AC VOL: 0
; 0000 010B 
; 0000 010C     if (PINA .4 == 0) // close menu
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 010D     {                 // Back
; 0000 010E       while (PINA .4 == 0)
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 010F         ;
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 0110       return 0;
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 0111     }
; 0000 0112 
; 0000 0113     // choose time_setting
; 0000 0114     if (PINA .2 == 0 & choice == 0)
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0115     {
; 0000 0116       while (PINA .2 == 0)
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0117         ;
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 0118       set_time();
;PCODE: $000001CB VOL: 0
; 0000 0119     }
; 0000 011A 
; 0000 011B     // choose in_out_search
; 0000 011C     if (PINA .2 == 0 & choice == 1)
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 011D     {
; 0000 011E       while (PINA .2 == 0)
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 011F         ;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0120       in_out_search();
;PCODE: $000001DD VOL: 0
; 0000 0121     }
; 0000 0122 
; 0000 0123     // choose reserve
; 0000 0124     if (PINA .2 == 0 & choice == 2)
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 0125     {
; 0000 0126       while (PINA .2 == 0)
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 0127         ;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 0128       reserve_park();
;PCODE: $000001EF VOL: 0
; 0000 0129     }
; 0000 012A 
; 0000 012B     // choose set date
; 0000 012C     if (PINA .2 == 0 & choice == 3)
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 012D     {
; 0000 012E       while (PINA .2 == 0)
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 012F         ;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0130       set_date();
;PCODE: $00000201 VOL: 0
; 0000 0131     }
; 0000 0132 
; 0000 0133     delay_ms(25);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0134   }
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 0135 }
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;
;// Time setting
;char set_time(void)
; 0000 0139 {
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 013A   bit choice = 0;
; 0000 013B   char line[17];
; 0000 013C   while (1)
;PCODE: $0000020D VOL: 0
;	choice -> R15.0
;	line -> Y+0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 013D   {
; 0000 013E     if (choice == 0)
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 013F     {
; 0000 0140       sprintf(line, "Set min=%d  >", minute);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0141       lcd_clear();
;PCODE: $0000021F VOL: 0
; 0000 0142       lcd_puts(line);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0143     }
; 0000 0144 
; 0000 0145     if (choice == 1)
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0146     {
; 0000 0147       sprintf(line, "Set hour=%d  >", hour);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0148       lcd_clear();
;PCODE: $00000232 VOL: 0
; 0000 0149       lcd_puts(line);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 014A     }
; 0000 014B 
; 0000 014C     if (PINA .1 == 0 & choice == 0)
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 014D     { // UP     min
; 0000 014E       while (PINA .1 == 0)
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 014F         ;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0150       minute++;
;PCODE: $00000247 VOL: 0
; 0000 0151       if (minute > 59)
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 0152         minute = 0;
;PCODE: $0000024B VOL: 0
; 0000 0153     }
;PCODE: $0000024C VOL: 0
; 0000 0154 
; 0000 0155     if (PINA .0 == 0 & choice == 0)
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0156     { // DOWN    min
; 0000 0157       while (PINA .0 == 0)
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0158         ;
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 0159       minute--;
;PCODE: $0000025F VOL: 0
; 0000 015A       if (minute < 0)
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 015B         minute = 59;
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 015C     }
;PCODE: $00000265 VOL: 0
; 0000 015D 
; 0000 015E     if (PINA .1 == 0 & choice == 1)
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 015F     { // UP    hour
; 0000 0160       while (PINA .1 == 0)
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0161         ;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 0162       hour++;
;PCODE: $00000278 VOL: 0
; 0000 0163       if (hour > 23)
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 0164         hour = 0;
;PCODE: $0000027C VOL: 0
; 0000 0165     }
;PCODE: $0000027D VOL: 0
; 0000 0166 
; 0000 0167     if (PINA .0 == 0 & choice == 1)
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 0168     { // DOWN    hour
; 0000 0169       while (PINA .0 == 0)
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 016A         ;
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 016B       hour--;
;PCODE: $00000290 VOL: 0
; 0000 016C       if (hour < 0)
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 016D         hour = 23;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 016E     }
;PCODE: $00000296 VOL: 0
; 0000 016F 
; 0000 0170     if (PINA .3 == 0)
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 0171     { // NEXT
; 0000 0172       while (PINA .3 == 0)
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 0173         ;
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0174       choice = !choice;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0175     }
; 0000 0176 
; 0000 0177     if (PINA .4 == 0)
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 0178     { // Back
; 0000 0179       while (PINA .4 == 0)
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 017A         ;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 017B       return 0;
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 017C     }
; 0000 017D 
; 0000 017E     delay_ms(25);
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 017F   }
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 0180 }
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;
;/// IN&OUT Search
;char in_out_search(void)
; 0000 0184 {
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0185   char t_month = month, line[17], line2[17];
; 0000 0186   char i_temp = day_index;
; 0000 0187   bit bit_m = 0;
; 0000 0188   while (1)
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;	t_month -> R17
;	line -> Y+19
;	line2 -> Y+2
;	i_temp -> R16
;	bit_m -> R15.0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 0189   {
; 0000 018A 
; 0000 018B     if (PINA .1 == 0)
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 018C     { // UP
; 0000 018D       while (PINA .1 == 0)
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 018E         ;
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 018F       i_temp++;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0190 
; 0000 0191       if (i_temp > day_index & bit_m == 0)
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 0192       {
; 0000 0193         i_temp = day_index;
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 0194         t_month--;
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 0195         bit_m = 1;
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 0196       }
; 0000 0197 
; 0000 0198       if (t_month <= 6 & i_temp > 31 & bit_m == 1)
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 0199       {
; 0000 019A         i_temp = 1;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 019B         t_month++;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 019C         bit_m = 0;
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 019D       }
; 0000 019E 
; 0000 019F       if (t_month > 6 & i_temp > 30 & bit_m == 1)
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 01A0       {
; 0000 01A1         i_temp = 1;
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 01A2         t_month++;
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 01A3         bit_m = 0;
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 01A4       }
; 0000 01A5 
; 0000 01A6       if (t_month == 12 & i_temp > 29 & bit_m == 1)
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 01A7       {
; 0000 01A8         i_temp = 1;
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 01A9         t_month++;
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 01AA         bit_m = 0;
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
; 0000 01AB       }
; 0000 01AC 
; 0000 01AD       if (t_month == 0)
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 01AE         t_month = 12;
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 01AF 
; 0000 01B0       if (t_month > 12)
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 01B1         t_month = 1;
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 01B2     }
;PCODE: $00000334 VOL: 0
; 0000 01B3 
; 0000 01B4     if (PINA .0 == 0)
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
; 0000 01B5     { // DOWN
; 0000 01B6       while (PINA .0 == 0)
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
; 0000 01B7         ;
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 01B8       i_temp--;
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
; 0000 01B9 
; 0000 01BA       if (i_temp == 0 & bit_m == 0)
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 01BB       {
; 0000 01BC 
; 0000 01BD         t_month--;
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 01BE 
; 0000 01BF         if (t_month == 0)
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 01C0           t_month = 12;
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 01C1 
; 0000 01C2         if (t_month > 12)
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 01C3           t_month = 1;
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 01C4 
; 0000 01C5         if (t_month <= 6)
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
; 0000 01C6           i_temp = 31;
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 01C7 
; 0000 01C8         if (t_month > 6)
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 01C9           i_temp = 30;
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 01CA 
; 0000 01CB         if (t_month == 12)
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 01CC           i_temp = 29;
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
; 0000 01CD 
; 0000 01CE         bit_m = 1;
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
; 0000 01CF       }
; 0000 01D0 
; 0000 01D1       if (i_temp < day_index & bit_m == 1)
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 01D2       {
; 0000 01D3         i_temp = day_index;
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0000 01D4         t_month++;
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0000 01D5         bit_m = 0;
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 01D6       }
; 0000 01D7 
; 0000 01D8       if (t_month == 0)
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
; 0000 01D9         t_month = 12;
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 01DA 
; 0000 01DB       if (t_month > 12)
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
; 0000 01DC         t_month = 1;
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
; 0000 01DD     }
;PCODE: $0000038C VOL: 0
; 0000 01DE 
; 0000 01DF     sprintf(line, "%d/%d/%d ", year, t_month, i_temp);
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 01E0     sprintf(line2, "in=%d out=%d", enter_array[i_temp], exit_array[i_temp]);
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 01E1 
; 0000 01E2     lcd_clear();
;PCODE: $000003B9 VOL: 0
; 0000 01E3     lcd_puts(line);
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
; 0000 01E4     lcd_gotoxy(0, 1);
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 01E5     lcd_puts(line2);
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 01E6 
; 0000 01E7     if (PINA .4 == 0)
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
; 0000 01E8     { // Back
; 0000 01E9       while (PINA .4 == 0)
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 01EA         ;
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 01EB       return 0;
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 01EC     }
; 0000 01ED     delay_ms(25);
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 01EE   }
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 01EF }
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;
;// reserve_park
;char reserve_park(void)
; 0000 01F3 {
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 01F4   char line[17];
; 0000 01F5 
; 0000 01F6   while (1)
;PCODE: $000003E1 VOL: 0
;	line -> Y+0
;PCODE: $000003E2 VOL: 0
; 0000 01F7   {
; 0000 01F8     sprintf(line, "Reserved=%d", reserved);
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 01F9     lcd_clear();
;PCODE: $000003EF VOL: 0
; 0000 01FA     lcd_puts(line);
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
; 0000 01FB 
; 0000 01FC     if (PINA .1 == 0)
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0000 01FD     {
; 0000 01FE       while (PINA .1 == 0)
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 01FF         ;
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 0200       reserved++;
;PCODE: $000003FB VOL: 0
; 0000 0201       capacity--;
;PCODE: $000003FC VOL: 0
; 0000 0202     }
; 0000 0203 
; 0000 0204     if (reserved >= init_capacity)
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 0205     {
; 0000 0206       reserved = init_capacity - 1;
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0000 0207     }
; 0000 0208 
; 0000 0209     if (PINA .0 == 0)
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 020A     {
; 0000 020B       while (PINA .0 == 0)
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 020C         ;
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 020D       reserved--;
;PCODE: $00000410 VOL: 0
; 0000 020E       capacity++;
;PCODE: $00000411 VOL: 0
; 0000 020F     }
; 0000 0210 
; 0000 0211     if (reserved <= 0)
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 0212     {
; 0000 0213       reserved = 0;
;PCODE: $00000416 VOL: 0
; 0000 0214     }
; 0000 0215 
; 0000 0216     if (PINA .4 == 0)
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 0217     { // Back
; 0000 0218       while (PINA .4 == 0)
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 0219         ;
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 021A       return 0;
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
; 0000 021B     }
; 0000 021C     delay_ms(25);
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
; 0000 021D   }
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 021E }
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;
;//// data setting
;char set_date(void)
; 0000 0222 {
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0000 0223   char choice = 0;
; 0000 0224   char line[17];
; 0000 0225   while (1)
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;	choice -> R17
;	line -> Y+1
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
; 0000 0226   {
; 0000 0227     if (choice == 1)
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 0228     {
; 0000 0229       sprintf(line, "Set month=%d  >", month);
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
; 0000 022A       lcd_clear();
;PCODE: $00000443 VOL: 0
; 0000 022B       lcd_puts(line);
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
; 0000 022C     }
; 0000 022D 
; 0000 022E     if (choice == 0)
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 022F     {
; 0000 0230       sprintf(line, "Set day=%d  >", day);
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 0231       lcd_clear();
;PCODE: $00000455 VOL: 0
; 0000 0232       lcd_puts(line);
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
; 0000 0233     }
; 0000 0234 
; 0000 0235     if (choice == 2)
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0000 0236     {
; 0000 0237       sprintf(line, "Set year=%d  >", year);
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
; 0000 0238       lcd_clear();
;PCODE: $00000468 VOL: 0
; 0000 0239       lcd_puts(line);
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0000 023A     }
; 0000 023B 
; 0000 023C     if (PINA .1 == 0 & choice == 1)
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
; 0000 023D     { // UP     month
; 0000 023E       while (PINA .1 == 0)
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 023F         ;
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
; 0000 0240       month++;
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0000 0241       if (month > 12)
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
; 0000 0242         month = 1;
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 0243     }
;PCODE: $00000484 VOL: 0
; 0000 0244 
; 0000 0245     if (PINA .0 == 0 & choice == 1)
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 0246     { // DOWN    month
; 0000 0247       while (PINA .0 == 0)
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
; 0000 0248         ;
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
; 0000 0249       month--;
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
; 0000 024A       if (month < 1)
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 024B         month = 12;
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 024C     }
;PCODE: $0000049E VOL: 0
; 0000 024D 
; 0000 024E     if (PINA .1 == 0 & choice == 0)
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
; 0000 024F     { // UP    day
; 0000 0250       while (PINA .1 == 0)
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 0251         ;
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
; 0000 0252       day++;
;PCODE: $000004B0 VOL: 0
; 0000 0253       day_index = day;
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 0254       if (day > 31)
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
; 0000 0255         day = 1;
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
; 0000 0256     }
;PCODE: $000004B9 VOL: 0
; 0000 0257 
; 0000 0258     if (PINA .0 == 0 & choice == 0)
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 0259     { // DOWN    day
; 0000 025A       while (PINA .0 == 0)
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
; 0000 025B         ;
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
; 0000 025C       day--;
;PCODE: $000004CB VOL: 0
; 0000 025D       day_index = day;
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
; 0000 025E       if (day < 1)
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
; 0000 025F         day = 31;
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
; 0000 0260     }
;PCODE: $000004D4 VOL: 0
; 0000 0261 
; 0000 0262     if (PINA .0 == 0 & choice == 2)
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
; 0000 0263     { // DOWN    year
; 0000 0264       while (PINA .0 == 0)
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
; 0000 0265         ;
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
; 0000 0266       year--;
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
; 0000 0267       if (year < 1)
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 0268         year = 1300;
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0000 0269     }
;PCODE: $000004EF VOL: 0
; 0000 026A 
; 0000 026B     if (PINA .1 == 0 & choice == 2)
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
; 0000 026C     { // UP    year
; 0000 026D       while (PINA .1 == 0)
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0000 026E         ;
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
; 0000 026F       year++;
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 0270       // if(year>1404)
; 0000 0271       // year=0;
; 0000 0272     }
; 0000 0273 
; 0000 0274     if (PINA .3 == 0)
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
; 0000 0275     { // NEXT
; 0000 0276       while (PINA .3 == 0)
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
; 0000 0277         ;
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
; 0000 0278       choice++;
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
; 0000 0279       if (choice >= 3)
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 027A         choice = 0;
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
; 0000 027B     }
;PCODE: $00000516 VOL: 0
; 0000 027C 
; 0000 027D     if (PINA .4 == 0)
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
; 0000 027E     { // Back
; 0000 027F       while (PINA .4 == 0)
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
; 0000 0280         ;
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
; 0000 0281       return 0;
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
; 0000 0282     }
; 0000 0283 
; 0000 0284     delay_ms(25);
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
; 0000 0285   }
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
; 0000 0286 }
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
